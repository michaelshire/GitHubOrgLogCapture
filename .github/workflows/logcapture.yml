# This worflow will call the GitHub API to download the log files and commit/push the new file to this repo.
# Modify the workflow so that it runs with appropriate token

name: Log Capture

# Controls when the workflow will run
on:
  # Triggers the workflow on schedule daily at 8am
  schedule:
  - cron: '0 8 * * *'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "get_audit_logs"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set yesterday
      - name: Get yesterday
        id: yesterday
        run: echo "::set-output name=yesterday::$(date --date='yesterday' +'%Y-%m-%d')"
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: 'curl -H "Authorization: token ${{ secrets.LEDCORIS_TOKEN }}" https://api.github.com/orgs/LedcorIS/audit-log?phrase=created:${{ steps.yesterday.outputs.yesterday }} >> audit-${{ steps.yesterday.outputs.yesterday }}.log'

      # Runs a set of commands using the runners shell
      - name: Adds the new log file to the repo
        run: git add .
      - name: Commit change to repo
        run: git -c user.email="LedcorIS@ledcor.com" -c user.name="Ledcor Automation" commit -am "Adding logs for ${{ steps.yesterday.outputs.yesterday }}"
      - name: Push change to repo
        run: git push origin main
